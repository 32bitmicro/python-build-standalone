on:
  push:
  pull_request:
  schedule:
    # Run daily to keep sccache cache up to date.
    - cron: '13 4 * * *'
jobs:
  # We need to build our own sccache until e6326bc8a20ee06af37e16a3a7a14e3374c66c66
  # is in a released version.
  sccache:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Install System Dependencies
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends musl-tools

      - uses: actions-rs/toolchain@v1
        id: install-rust
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
          default: true
          profile: minimal

      - uses: actions/checkout@v2
        with:
          repository: indygreg/sccache
          ref: b0eae3f0d174b81e7582159cb9329dbea0af25c9
          fetch-depth: 0

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ steps.install-rust.outputs.rustc}}-sccache-${{ hashFiles('Cargo.lock') }}

      - name: Build sccache
        run: |
          cargo build --release --target x86_64-unknown-linux-musl

      - name: Upload sccache executable
        uses: actions/upload-artifact@v2
        with:
          name: sccache
          path: target/x86_64-unknown-linux-musl/release/sccache

  build:
    strategy:
      fail-fast: false
      matrix:
        triple:
          - 'x86_64-unknown-linux-gnu'
          - 'x86_64-unknown-linux-musl'
        py:
          - 'cpython-3.8'
          - 'cpython-3.9'
        optimizations:
          - 'debug'
          - 'noopt'
          - 'pgo'
        exclude:
          # We don't publish noopt builds for GNU Linux.
          - triple: 'x86_64-unknown-linux-gnu'
            optimizations: 'noopt'
          # PGO doesn't work with musl libc.
          - triple: 'x86_64-unknown-linux-musl'
            optimizations: 'pgo'

    needs:
      - sccache
    runs-on: 'ubuntu-latest'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SCCACHE_BUCKET: 'python-build-standalone-sccache'
      SCCACHE_S3_USE_SSL: '1'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Download sccache
        uses: actions/download-artifact@v2
        with:
          name: sccache

      - name: Configure sccache
        run: |
          chmod +x sccache

      - name: Build
        run: |
          export PYBUILD_RELEASE_TAG=$(git log -n 1 --date=format:%Y%m%dT%H%M%S --pretty=format:%ad)

          if [ "${{ matrix.triple }}" = "x86_64-unknown-linux-musl" ]; then
            EXTRA_ARGS=--libressl
          else
            EXTRA_ARGS=
          fi

          ./build-linux.py --target-triple ${{ matrix.triple }} --python ${{ matrix.py }} --optimizations ${{ matrix.optimizations }} ${EXTRA_ARGS}

      - name: Upload Distribution
        uses: actions/upload-artifact@v2
        with:
          name: dists-linux
          path: dist/*
