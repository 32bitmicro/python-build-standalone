# This file defines metadata for Python extension modules.
#
# Keys are the name of an extension module in a CPython distribution.
# Values are maps having the following keys:
#
# disabled-targets
#   Array of targets the extension module is disabled on. Values are regular
#   expressions.
#
# minimum-python-version
#   X.Y version number of minimum Python containing this extension module.
#
# required-targets
#   Array of target triples this extension module is required to initialize
#   a Python interpreter.
#
# setup-dist-verbatim
#   Whether extension module can be copied verbatim from Setup.dist without
#   issue.

_abc: {}

_ast: {}

_asyncio:
  sources:
    - _asynciomodule.c

_bisect:
  sources:
    - _bisectmodule.c

_blake2:
  sources:
    - _blake2/blake2module.c
    - _blake2/blake2b_impl.c
    - _blake2/blake2s_impl.c

_bz2:
  sources:
    - _bz2module.c
  links:
    - bz2

_codecs:
  required-targets:
    - .*

_codecs_cn:
  sources:
    - cjkcodecs/_codecs_cn.c

_codecs_hk:
  sources:
    - cjkcodecs/_codecs_hk.c

_codecs_iso2022:
  sources:
    - cjkcodecs/_codecs_iso2022.c

_codecs_jp:
  sources:
    - cjkcodecs/_codecs_jp.c

_codecs_kr:
  sources:
    - cjkcodecs/_codecs_kr.c

_codecs_tw:
  sources:
    - cjkcodecs/_codecs_tw.c

_collections: {}

_contextvars:
  sources:
    - _contextvarsmodule.c

_crypt:
  sources:
    - _cryptmodule.c
  links-conditional:
    # Linux links against libcrypt. Apple has symbols through a universal framework.
    - name: crypt
      targets:
        - .*-unknown-linux-.*

_csv:
  sources:
    - _csv.c

_ctypes:
  sources:
    - _ctypes/_ctypes.c
    - _ctypes/callbacks.c
    - _ctypes/callproc.c
    - _ctypes/stgdict.c
    - _ctypes/cfield.c
  sources-conditional:
    - source: _ctypes/darwin/dlfcn_simple.c
      targets:
        - .*-apple-.*
    - source: _ctypes/malloc_closure.c
      targets:
        - .*-apple-.*
  defines:
    - HAVE_FFI_PREP_CIF_VAR=1
    - HAVE_FFI_PREP_CLOSURE_LOC=1
    - HAVE_FFI_CLOSURE_ALLOC=1
  defines-conditional:
    - define: MACOSX
      targets:
        - .*-apple-.*
    - define: USING_MALLOC_CLOSURE_DOT_C=1
      targets:
        - .*-apple-.*
  includes-deps:
    - include
  includes-conditional:
    - path: _ctypes/darwin
      targets:
        - .*-apple-.*
  links:
    - ffi
    - dl

_ctypes_test:
  sources:
    - _ctypes/_ctypes_test.c
  links:
    - m

_curses:
  # ncurses not available on iOS.
  disabled-targets:
    - .*-apple-ios
    - .*-apple-tvos
    - .*-apple-watchos
  sources:
    - _cursesmodule.c
  defines:
    - HAVE_NCURSESW=1
  defines-conditional:
    - define: _XOPEN_SOURCE_EXTENDED=1
      targets:
        - .*-apple-darwin
  includes-deps:
    - include/ncursesw
  links-conditional:
    # link against ncursesw on Linux and ncurses on macOS. The macOS library is
    # Unicode aware, despite the name implying it isn't.
    - name: ncursesw
      targets:
        - .*-unknown-linux-.*
    - name: ncurses
      targets:
        - .*-apple-darwin

_curses_panel:
  # ncurses not available on iOS.
  disabled-targets:
    - .*-apple-ios
    - .*-apple-tvos
    - .*-apple-watchos
  sources:
    - _curses_panel.c
  defines:
    - HAVE_NCURSESW=1
  includes-deps:
    - include/ncursesw
  links-conditional:
    - name: panelw
      targets:
        - .*-unknown-linux-.*
    - name: panel
      targets:
        - .*-apple-darwin

    - name: ncursesw
      targets:
        - .*-unknown-linux-.*
    - name: ncurses
      targets:
        - .*-apple-darwin

_datetime:
  sources:
    - _datetimemodule.c

_dbm:
  sources:
    - _dbmmodule.c
  defines-conditional:
    - define: HAVE_BERKDB_H
      targets:
        - .*-unknown-linux-.*
    - define: DB_DBM_HSEARCH
      targets:
        - .*-unknown-linux-.*
    - define: HAVE_NDBM_H
      targets:
        - .*-apple-.*
  includes-deps:
    - include
  links-conditional:
    # macOS ships with an ndbm implementation in libSystem. CPython's setup.py will
    # use it unless an ndbl or gdbm_compat library is present.
    - name: db
      targets:
        - .*-unknown-linux-.*

_decimal:
  sources:
    - _decimal/_decimal.c
    - _decimal/libmpdec/basearith.c
    - _decimal/libmpdec/constants.c
    - _decimal/libmpdec/context.c
    - _decimal/libmpdec/convolute.c
    - _decimal/libmpdec/crt.c
    - _decimal/libmpdec/difradix2.c
    - _decimal/libmpdec/fnt.c
    - _decimal/libmpdec/fourstep.c
    - _decimal/libmpdec/io.c
    - _decimal/libmpdec/mpdecimal.c
    - _decimal/libmpdec/numbertheory.c
    - _decimal/libmpdec/sixstep.c
    - _decimal/libmpdec/transpose.c
  sources-conditional:
    # memory.c renamed to mpalloc.c in 3.9.
    - source: _decimal/libmpdec/memory.c
      maximum-python-version: "3.8"
    - source: _decimal/libmpdec/mpalloc.c
      minimum-python-version: "3.9"
  includes:
    - Modules/_decimal/libmpdec
  defines-conditional:
    - define: ANSI=1
      targets:
        - .*-unknown-linux-.*
    - define: ASM=1
      targets:
        - i686-.*
        - x86_64.*
    - define: CONFIG_32=1
      targets:
        - armv7-.*
        - i686-.*
        - mips-.*
        - mipsel-.*
    - define: CONFIG_64=1
      targets:
        # CONFIG_64 is mutually exclusive with UNIVERSAL=1
        - aarch64-unknown-linux-.*
        - s390x-unknown-linux-.*
        - x86_64.*-unknown-linux-.*
    - define: HAVE_UINT128_T=1
      targets:
        - aarch64-.*
        - s390x-.*
        - x86_64.*
    - define: PPRO=1
      targets:
        - i686-.*
    # TODO is this correct for non-universal binaries?
    - define: UNIVERSAL=1
      targets:
        - .*-apple-.*

_elementtree:
  sources:
    - _elementtree.c
  defines:
    # TODO reconcile against CPython commit ec93721e0066c4cbe40085188a9bf0952aa935ef
    - HAVE_EXPAT_CONFIG_H=1
    - XML_POOR_ENTROPY=1
    - USE_PYEXPAT_CAPI
  includes:
    - Modules/expat

_functools: {}

_gdbm:
  # Disable GDBM everywhere because it is GPL v3.
  disabled-targets:
    - .*
  # Configs never tested in YAML world since extension disabled globally. See
  # VCS history from old static-modules* files for possible config changes if
  # we ever need to revive this.
  sources:
    - _gdbmmodule.c
  defines:
    - HAVE_NDBM_H
  includes-deps:
    - include
  links:
    - gdbm

_hashlib:
  sources:
    - _hashopenssl.c
  includes-deps:
    - include
  links:
    - crypto

_heapq:
  sources:
    - _heapqmodule.c

_imp: {}

_io:
  required-targets:
    - .*

_json:
  sources:
    - _json.c

_locale: {}

_lsprof:
  sources:
    - _lsprof.c
    - rotatingtree.c

_lzma:
  sources:
    - _lzmamodule.c
  includes-deps:
    - include
  links:
    - lzma

_md5:
  sources:
    - md5module.c

_multibytecodec:
  sources:
    - cjkcodecs/multibytecodec.c

_multiprocessing:
  # TODO check setup.py logic for semaphore.c and possibly fix missing
  # dependency.
  sources:
    - _multiprocessing/multiprocessing.c
    - _multiprocessing/semaphore.c

_opcode:
  sources:
    - _opcode.c

_operator: {}

_peg_parser: {}

_pickle:
  sources:
    - _pickle.c
  defines-conditional:
    - define: Py_BUILD_CORE_MODULE
      minimum-python-version: "3.10"

_posixshmem:
  sources:
    - _multiprocessing/posixshmem.c
  includes:
    - Modules/_multiprocessing
  links-conditional:
    - name: rt
      targets:
        - .*-unknown-linux-.*

_posixsubprocess:
  sources:
    - _posixsubprocess.c
  defines-conditional:
    - define: Py_BUILD_CORE_BUILTIN
      minimum-python-version: "3.10"

_queue:
  sources:
    - _queuemodule.c

_random:
  sources:
    - _randommodule.c
  defines-conditional:
    - define: Py_BUILD_CORE_MODULE
      minimum-python-version: "3.9"

_scproxy:
  # _scproxy is Apple OS only.
  # APIs required by _scproxy not available on iOS.
  disabled-targets:
    - .*-apple-ios
    - .*-unknown-linux-.*
  sources:
    - _scproxy.c
  frameworks:
    - CoreFoundation
    - SystemConfiguration

_sha1:
  sources:
    - sha1module.c

_sha256:
  sources:
    - sha256module.c
  defines-conditional:
    - define: Py_BUILD_CORE_BUILTIN
      minimum-python-version: "3.9"

_sha3:
  setup-dist-verbatim: true

_sha512:
  setup-dist-verbatim: true

_signal:
  required-targets:
    - .*

_sqlite3:
  sources:
    - _sqlite/cache.c
    - _sqlite/connection.c
    - _sqlite/cursor.c
    - _sqlite/microprotocols.c
    - _sqlite/module.c
    - _sqlite/prepare_protocol.c
    - _sqlite/row.c
    - _sqlite/statement.c
    - _sqlite/util.c
  includes-deps:
    - include
  includes:
    - Modules/_sqlite
  defines:
    - "MODULE_NAME=\\\"sqlite3\\\""
  defines-conditional:
    # Cannot load dynamic extensions on iOS.
    - define: SQLITE_OMIT_LOAD_EXTENSION=1
      targets:
        - .*-ios
  links:
    - sqlite3

_socket:
  setup-dist-verbatim: true

_sre: {}

_ssl:
  sources:
    - _ssl.c
  includes-deps:
    - include
  links:
    - ssl
    - crypto

_statistics:
  setup-dist-verbatim: true

_stat: {}

_string: {}

_struct:
  setup-dist-verbatim: true

_symtable: {}

_testbuffer:
  minimum-python-version: '3.9'
  sources:
    - _testbuffer.c

_testcapi:
  # Ideally this would only be disabled while cross-compiling. We can't build it
  # as a built-in extension via static-modules. And when letting setup.py build
  # it, it builds for the host architecture during cross-builds, which upsets
  # our validation script when it screens for the target machine type of
  # binaries. So just disable it.
  disabled-targets:
    - aarch64-apple-.*

_testimportmultiple:
  minimum-python-version: '3.9'
  sources:
    - _testimportmultiple.c

_testinternalcapi:
  sources:
    - _testinternalcapi.c
  defines:
    - Py_BUILD_CORE_MODULE

_testmultiphase:
  minimum-python-version: '3.9'
  sources:
    - _testmultiphase.c

_thread:
  required-targets:
    - .*

_tkinter:
  # tk not available on iOS.
  disabled-targets:
    - .*-apple-ios
  sources:
    - _tkinter.c
    - tkappinit.c
  defines:
    - WITH_APPINIT
  includes-deps:
    - include/X11
  links:
    - tcl8.6
    - tk8.6

  # Without -ObjC, we get a crash: -[TKApplication tkProcessEvent:]: unrecognized selector sent to instance.
  # See also https://core.tcl-lang.org/tk/tktview/85f316beb15108ac43b03fa6c8608e31f3ae5f92.
  # This is apparently an issue with static linking Objective-C binaries.
  linker-args:
    - args: ["-ObjC"]
      targets:
        - .*-apple-darwin
  links-conditional:
    - name: X11
      targets:
        - .*-unknown-linux-.*
    - name: xcb
      targets:
        - .*-unknown-linux-.*
    - name: Xau
      targets:
        - .*-unknown-linux-.*
  # Many of these are dependencies of libtcl and libtk.
  frameworks:
    - AppKit
    - ApplicationServices
    - Carbon
    - Cocoa
    - CoreFoundation
    - CoreServices
    - CoreGraphics
    - IOKit
    - QuartzCore

_tracemalloc:
  required-targets:
    - .*

_uuid:
  sources:
    - _uuidmodule.c
  includes-deps:
    - include/uuid
  links-conditional:
    - name: uuid
      # iOS doesn't need to link.
      targets:
        - .*-unknown-linux-.*
        - .*-apple-darwin

_warnings: {}

_weakref:
  setup-dist-verbatim: true

  required-targets:
    - .*

_xxsubinterpreters:
  minimum-python-version: '3.9'
  sources:
    - _xxsubinterpretersmodule.c

_xxtestfuzz:
  minimum-python-version: '3.9'
  sources:
    - _xxtestfuzz/_xxtestfuzz.c
    - _xxtestfuzz/fuzzer.c

_zoneinfo:
  setup-dist-verbatim: true

array:
  setup-dist-verbatim: true

atexit: {}

audioop:
  setup-dist-verbatim: true

binascii:
  setup-dist-verbatim: true

builtins: {}

cmath:
  setup-dist-verbatim: true

errno: {}

faulthandler:
  required-targets:
    - .*

fcntl:
  setup-dist-verbatim: true

gc: {}

grp:
  setup-dist-verbatim: true

itertools: {}

marshal: {}

math:
  setup-dist-verbatim: true

mmap:
  setup-dist-verbatim: true

nis:
  setup-dist-verbatim: true

  disabled-targets:
    # NIS is not available on Apple OS.
    - aarch64-apple-.*
    - x86_64-apple-.*

    # Missing header dependencies on musl.
    - .*-unknown-linux-musl

    # On other UNIX platforms, it is globally disabled because it has a dependency
    # on libnsl, which isn't part of the Linux Standard Base specification. libnsl
    # has a wonky history where it was once part of glibc and core system installs
    # but is slowly being phased away from base installations. There are potential
    # workarounds to adding nis support. See discussion in
    # https://github.com/indygreg/python-build-standalone/issues/51.
    - .*

ossaudiodev:
  disabled-targets:
    # ossaudiodev not available on Apple OS.
    - aarch64-apple-.*
    - x86_64-apple-.*

    # Missing header dependencies.
    - .*-unknown-linux-musl
  sources:
    - ossaudiodev.c

parser:
  setup-dist-verbatim: true

posix:
  required-targets:
    - .*-unknown-linux-.*
    - .*-apple-darwin

pwd: {}

pyexpat:
  sources:
    - pyexpat.c
    - expat/xmlparse.c
    - expat/xmlrole.c
    - expat/xmltok.c
  includes:
    - Modules/expat
  defines:
    - HAVE_EXPAT_CONFIG_H=1
    - XML_POOR_ENTROPY=1
    - USE_PYEXPAT_CAPI

readline:
  disabled-targets:
    - .*-apple-ios
    - .*-apple-tvos
    - .*-apple-watchos
  sources:
    - readline.c
  defines:
    - USE_LIBEDIT=1
  includes-deps:
    - libedit/include
    - libedit/include/ncursesw
  links:
    - edit
  links-conditional:
    - name: ncursesw
      targets:
        - .*-unknown-linux-.*
    - name: ncurses
      targets:
        - .*-apple-.*

resource:
  setup-dist-verbatim: true

select:
  setup-dist-verbatim: true

spwd:
  setup-dist-verbatim: true

  # spwd not available on Apple OS.
  disabled-targets:
    - aarch64-apple-.*
    - x86_64-apple-.*

syslog:
  setup-dist-verbatim: true

sys: {}

termios:
  setup-dist-verbatim: true

time: {}

unicodedata:
  setup-dist-verbatim: true

xxlimited:
  # Similar story as _testcapi. The extension exists to test the limited API,
  # which we don't really care about. Statically building it runs into problems
  # and cross-compiling emits wrong machine type when built via setup.py.
  disabled-targets:
    - aarch64-apple-.*

xxlimited_35:
  minimum-python-version: '3.10'

  # Similar story as _testcapi. The extension exists to test the limited API,
  # which we don't really care about. Statically building it runs into problems
  # and cross-compiling emits wrong machine type when built via setup.py.
  disabled-targets:
    - aarch64-apple-.*

xxsubtype: {}

zlib:
  setup-dist-verbatim: true