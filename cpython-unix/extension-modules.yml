# This file defines metadata for Python extension modules.
#
# Keys are the name of an extension module in a CPython distribution.
# Values are maps having the following keys:
#
# disabled-targets
#   Array of targets the extension module is disabled on. Values are regular
#   expressions.
#
# minimum-python-version
#   X.Y version number of minimum Python containing this extension module.
#
# required-targets
#   Array of target triples this extension module is required to initialize
#   a Python interpreter.
#
# setup-dist-verbatim
#   Whether extension module can be copied verbatim from Setup.dist without
#   issue.

_abc: {}

_ast: {}

_asyncio:
  setup-dist-verbatim: true

_bisect:
  setup-dist-verbatim: true

_blake2:
  setup-dist-verbatim: true

_bz2:
  sources:
    - _bz2module.c
  links:
    - bz2

_codecs:
  required-targets:
    - .*

_codecs_cn:
  setup-dist-verbatim: true

_codecs_hk:
  setup-dist-verbatim: true

_codecs_iso2022:
  setup-dist-verbatim: true

_codecs_jp:
  setup-dist-verbatim: true

_codecs_kr:
  setup-dist-verbatim: true

_codecs_tw:
  setup-dist-verbatim: true

_collections: {}

_contextvars:
  setup-dist-verbatim: true

_crypt:
  sources:
    - _cryptmodule.c
  links-conditional:
    # Linux links against libcrypt. Apple has symbols through a universal framework.
    - name: crypt
      targets:
        - .*-unknown-linux-.*

_csv:
  setup-dist-verbatim: true

_ctypes: {}

_ctypes_test:
  sources:
    - _ctypes/_ctypes_test.c
  links:
    - m

_curses:
  # ncurses not available on iOS.
  disabled-targets:
    - .*-apple-ios

_curses_panel:
  # ncurses not available on iOS.
  disabled-targets:
    - .*-apple-ios

_datetime:
  setup-dist-verbatim: true

_dbm: {}

_decimal: {}

_elementtree:
  sources:
    - _elementtree.c
  defines:
    # TODO reconcile against CPython commit ec93721e0066c4cbe40085188a9bf0952aa935ef
    - HAVE_EXPAT_CONFIG_H=1
    - XML_POOR_ENTROPY=1
    - USE_PYEXPAT_CAPI
  includes:
    - Modules/expat

_functools: {}

_gdbm:
  # Disable GDBM everywhere because it is GPL v3.
  disabled-targets:
    - .*

_hashlib: {}

_heapq:
  setup-dist-verbatim: true

_imp: {}

_io:
  required-targets:
    - .*

_json:
  sources:
    - _json.c

_locale: {}

_lsprof:
  sources:
    - _lsprof.c
    - rotatingtree.c

_lzma:
  sources:
    - _lzmamodule.c
  includes-deps:
    - include
  links:
    - lzma

_md5:
  setup-dist-verbatim: true

_multibytecodec:
  setup-dist-verbatim: true

_multiprocessing:
  # TODO check setup.py logic for semaphore.c and possibly fix missing
  # dependency.
  sources:
    - _multiprocessing/multiprocessing.c
    - _multiprocessing/semaphore.c

_opcode:
  sources:
    - _opcode.c

_operator: {}

_peg_parser: {}

_pickle:
  setup-dist-verbatim: true

_posixshmem:
  sources:
    - _multiprocessing/posixshmem.c
  includes:
    - Modules/_multiprocessing
  links-conditional:
    - name: rt
      targets:
        - .*-unknown-linux-.*

_posixsubprocess:
  setup-dist-verbatim: true

_queue:
  sources:
    - _queuemodule.c

_random:
  setup-dist-verbatim: true

_scproxy:
  # APIs required by _scproxy not available on iOS.
  disabled-targets:
    - .*-apple-ios

_sha1:
  setup-dist-verbatim: true

_sha256:
  setup-dist-verbatim: true

_sha3:
  setup-dist-verbatim: true

_sha512:
  setup-dist-verbatim: true

_signal:
  required-targets:
    - .*

_sqlite3:
  sources:
    - _sqlite/cache.c
    - _sqlite/connection.c
    - _sqlite/cursor.c
    - _sqlite/microprotocols.c
    - _sqlite/module.c
    - _sqlite/prepare_protocol.c
    - _sqlite/row.c
    - _sqlite/statement.c
    - _sqlite/util.c
  includes-deps:
    - include
  includes:
    - Modules/_sqlite
  defines:
    - "MODULE_NAME=\\\"sqlite3\\\""
  defines-conditional:
    # Cannot load dynamic extensions on iOS.
    - define: SQLITE_OMIT_LOAD_EXTENSION=1
      targets:
        - .*-ios
  links:
    - sqlite3

_socket:
  setup-dist-verbatim: true

_sre: {}

_ssl:
  sources:
    - _ssl.c
  includes-deps:
    - include
  links:
    - ssl
    - crypto

_statistics:
  setup-dist-verbatim: true

_stat: {}

_string: {}

_struct:
  setup-dist-verbatim: true

_symtable: {}

_testbuffer:
  minimum-python-version: '3.9'
  sources:
    - _testbuffer.c

_testcapi:
  # Ideally this would only be disabled while cross-compiling. We can't build it
  # as a built-in extension via static-modules. And when letting setup.py build
  # it, it builds for the host architecture during cross-builds, which upsets
  # our validation script when it screens for the target machine type of
  # binaries. So just disable it.
  disabled-targets:
    - aarch64-apple-.*

_testimportmultiple:
  minimum-python-version: '3.9'
  sources:
    - _testimportmultiple.c

_testinternalcapi:
  # Despite being a test module, this needs to be built as a
  # built-in in order to facilitate testing.
  setup-dist-verbatim: true

_testmultiphase:
  minimum-python-version: '3.9'
  sources:
    - _testmultiphase.c

_thread:
  required-targets:
    - .*

_tkinter:
  # tk not available on iOS.
  disabled-targets:
    - .*-apple-ios
  sources:
    - _tkinter.c
    - tkappinit.c
  defines:
    - WITH_APPINIT
  includes-deps:
    - include/X11
  links:
    - tcl8.6
    - tk8.6

  # Without -ObjC, we get a crash: -[TKApplication tkProcessEvent:]: unrecognized selector sent to instance.
  # See also https://core.tcl-lang.org/tk/tktview/85f316beb15108ac43b03fa6c8608e31f3ae5f92.
  # This is apparently an issue with static linking Objective-C binaries.
  linker-args:
    - args: ["-ObjC"]
      targets:
        - .*-apple-darwin
  links-conditional:
    - name: X11
      targets:
        - .*-unknown-linux-.*
    - name: xcb
      targets:
        - .*-unknown-linux-.*
    - name: Xau
      targets:
        - .*-unknown-linux-.*
  # Many of these are dependencies of libtcl and libtk.
  frameworks:
    - AppKit
    - ApplicationServices
    - Carbon
    - Cocoa
    - CoreFoundation
    - CoreServices
    - CoreGraphics
    - IOKit
    - QuartzCore

_tracemalloc:
  required-targets:
    - .*

_uuid:
  sources:
    - _uuidmodule.c
  includes-deps:
    - include/uuid
  links-conditional:
    - name: uuid
      # iOS doesn't need to link.
      targets:
        - .*-unknown-linux-.*
        - .*-apple-darwin

_warnings: {}

_weakref:
  setup-dist-verbatim: true

  required-targets:
    - .*

_xxsubinterpreters:
  minimum-python-version: '3.9'
  sources:
    - _xxsubinterpretersmodule.c

_xxtestfuzz: {}

_zoneinfo:
  setup-dist-verbatim: true

array:
  setup-dist-verbatim: true

atexit: {}

audioop:
  setup-dist-verbatim: true

binascii:
  setup-dist-verbatim: true

builtins: {}

cmath:
  setup-dist-verbatim: true

errno: {}

faulthandler:
  required-targets:
    - .*

fcntl:
  setup-dist-verbatim: true

gc: {}

grp:
  setup-dist-verbatim: true

itertools: {}

marshal: {}

math:
  setup-dist-verbatim: true

mmap:
  setup-dist-verbatim: true

nis:
  setup-dist-verbatim: true

  disabled-targets:
    # NIS is not available on Apple OS.
    - aarch64-apple-.*
    - x86_64-apple-.*

    # Missing header dependencies on musl.
    - .*-unknown-linux-musl

    # On other UNIX platforms, it is globally disabled because it has a dependency
    # on libnsl, which isn't part of the Linux Standard Base specification. libnsl
    # has a wonky history where it was once part of glibc and core system installs
    # but is slowly being phased away from base installations. There are potential
    # workarounds to adding nis support. See discussion in
    # https://github.com/indygreg/python-build-standalone/issues/51.
    - .*

ossaudiodev:
  disabled-targets:
    # ossaudiodev not available on Apple OS.
    - aarch64-apple-.*
    - x86_64-apple-.*

    # Missing header dependencies.
    - .*-unknown-linux-musl
  sources:
    - ossaudiodev.c

parser:
  setup-dist-verbatim: true

posix:
  required-targets:
    - .*-unknown-linux-.*
    - .*-apple-darwin

pwd: {}

pyexpat:
  sources:
    - pyexpat.c
    - expat/xmlparse.c
    - expat/xmlrole.c
    - expat/xmltok.c
  includes:
    - Modules/expat
  defines:
    - HAVE_EXPAT_CONFIG_H=1
    - XML_POOR_ENTROPY=1
    - USE_PYEXPAT_CAPI

readline: {}

resource:
  setup-dist-verbatim: true

select:
  setup-dist-verbatim: true

spwd:
  setup-dist-verbatim: true

  # spwd not available on Apple OS.
  disabled-targets:
    - aarch64-apple-.*
    - x86_64-apple-.*

syslog:
  setup-dist-verbatim: true

sys: {}

termios:
  setup-dist-verbatim: true

time: {}

unicodedata:
  setup-dist-verbatim: true

xxlimited:
  # Similar story as _testcapi. The extension exists to test the limited API,
  # which we don't really care about. Statically building it runs into problems
  # and cross-compiling emits wrong machine type when built via setup.py.
  disabled-targets:
    - aarch64-apple-.*

xxlimited_35:
  minimum-python-version: '3.10'

  # Similar story as _testcapi. The extension exists to test the limited API,
  # which we don't really care about. Statically building it runs into problems
  # and cross-compiling emits wrong machine type when built via setup.py.
  disabled-targets:
    - aarch64-apple-.*

xxsubtype: {}

zlib:
  setup-dist-verbatim: true